{"version":3,"sources":["Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","React","useState","data","setData","useEffect","fetch","then","response","json","email","results","image","picture","medium","Helmet","name","content","property","App","basename","process","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"sOAGe,SAASA,IAAa,IAAD,EACVC,IAAMC,SAAS,IADL,mBAC3BC,EAD2B,KACrBC,EADqB,KAclC,OAZAH,IAAMI,WAAU,WACdC,MAAM,8BACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACJ,GAAD,OACJC,EAAQ,CACNM,MAAOP,EAAKQ,QAAQ,GAAGD,MACvBE,MAAOT,EAAKQ,QAAQ,GAAGE,QAAQC,cAGpC,CAACV,IAEF,qCACE,eAACW,EAAA,EAAD,WACE,sBAAMC,KAAK,cAAcC,QAASd,EAAKO,QACvC,sBAAMQ,SAAS,WAAWD,QAASd,EAAKO,QACxC,sBAAMQ,SAAS,UAAUD,QAAQ,YACjC,sBAAMC,SAAS,WAAWD,QAAO,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMS,QACzC,sBACEM,SAAS,SACTD,QAAQ,iDAEV,sBAAMD,KAAK,eAAeC,QAAQ,wBAElC,sBAAMC,SAAS,iBAAiBD,QAASd,EAAKO,QAC9C,sBAAMQ,SAAS,eAAeD,QAAQ,iBACtC,sBAAMD,KAAK,oBAAoBC,QAAQ,oBAEzC,8C,MCnBSE,MAVf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,iBAAlB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACvB,EAAD,WCGlBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCARO,EAAcC,SAASC,eAAe,QACxCF,EAAYG,gBACdC,kBAAQ,cAAC,EAAD,IAASJ,GAEjBK,iBAAO,cAAC,EAAD,IAASL,GAMlBR,M","file":"static/js/main.d12db84b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function Dashboard() {\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://randomuser.me/api/\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) =>\n        setData({\n          email: data.results[0].email,\n          image: data.results[0].picture.medium,\n        })\n      );\n  }, [setData]);\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content={data.email} />\n        <meta property=\"og:title\" content={data.email} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:image\" content={data?.image} />\n        <meta\n          property=\"og:url\"\n          content=\"https://platform.gracepapers.com.au/lesson/1\"\n        />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n        <meta property=\"og:description\" content={data.email} />\n        <meta property=\"og:site_name\" content=\"Grace Papers\" />\n        <meta name=\"twitter:image:alt\" content=\"An image alt\" />\n      </Helmet>\n      <h1>Dashboard</h1>\n    </>\n  );\n}\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { hydrate, render } from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}